<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jl.mis.mapper.OrderDetailMapper">
	
	<resultMap id="BaseResultMap" type="com.jl.mis.model.OrderDetail">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="goods_details_id" jdbcType="INTEGER" property="goodsDetailsId" />
		<result column="goods_quantity" jdbcType="INTEGER" property="goodsQuantity" />
		<result column="goods_specification_details_id" jdbcType="INTEGER"
			property="goodsSpecificationDetailsId" />
		<result column="goods_purchasing_price" jdbcType="DOUBLE"
			property="goodsPurchasingPrice" />
		<result column="goods_original_price" jdbcType="DOUBLE"
			property="goodsOriginalPrice" />
		<result column="goods_payment_price" jdbcType="DOUBLE"
			property="goodsPaymentPrice" />
		<result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
		<result column="goods_cover_url" jdbcType="VARCHAR" property="goodsCoverUrl" />
		<result column="goods_specification_name" jdbcType="VARCHAR"
			property="goodsSpecificationName" />
		<result column="order_id" jdbcType="INTEGER" property="orderId" />
	</resultMap>
	
	<sql id="Base_Column_List">
		id, goods_details_id, goods_quantity,
		goods_specification_details_id,
		goods_purchasing_price,
		goods_original_price,
		goods_payment_price, goods_name, goods_cover_url,
		goods_specification_name, order_id
	</sql>
	
	<!-- 根据主键查询信息 -->
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_detail
		where id = #{id,jdbcType=INTEGER}
	</select>
	
	<!-- 根据主键删除 信息 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		order_detail
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 保存全部信息  -->
	<insert id="insert" parameterType="com.jl.mis.model.OrderDetail">
		insert into order_detail (
		goods_details_id, goods_quantity,
		goods_specification_details_id,
		goods_purchasing_price,
		goods_original_price,
		goods_payment_price, goods_name, goods_cover_url,
		goods_specification_name, order_id)
		values (
		#{goodsDetailsId,jdbcType=INTEGER},
		#{goodsQuantity,jdbcType=INTEGER},
		#{goodsSpecificationDetailsId,jdbcType=INTEGER},
		#{goodsPurchasingPrice,jdbcType=DOUBLE},
		#{goodsOriginalPrice,jdbcType=DOUBLE},
		#{goodsPaymentPrice,jdbcType=DOUBLE}, #{goodsName,jdbcType=VARCHAR},
		#{goodsCoverUrl,jdbcType=VARCHAR},
		#{goodsSpecificationName,jdbcType=VARCHAR},
		#{orderId,jdbcType=INTEGER})
	</insert>
	
	<!-- 保存所选内容的信息 -->
	<insert id="insertSelective" parameterType="com.jl.mis.model.OrderDetail" useGeneratedKeys="true" keyProperty="id">
		insert into order_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="goodsDetailsId != null">
				goods_details_id,
			</if>
			<if test="goodsQuantity != null">
				goods_quantity,
			</if>
			<if test="goodsSpecificationDetailsId != null">
				goods_specification_details_id,
			</if>
			<if test="goodsPurchasingPrice != null">
				goods_purchasing_price,
			</if>
			<if test="goodsOriginalPrice != null">
				goods_original_price,
			</if>
			<if test="goodsPaymentPrice != null">
				goods_payment_price,
			</if>
			<if test="goodsName != null">
				goods_name,
			</if>
			<if test="goodsCoverUrl != null">
				goods_cover_url,
			</if>
			<if test="goodsSpecificationName != null">
				goods_specification_name,
			</if>
			<if test="orderId != null">
				order_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="goodsDetailsId != null">
				#{goodsDetailsId,jdbcType=INTEGER},
			</if>
			<if test="goodsQuantity != null">
				#{goodsQuantity,jdbcType=INTEGER},
			</if>
			<if test="goodsSpecificationDetailsId != null">
				#{goodsSpecificationDetailsId,jdbcType=INTEGER},
			</if>
			<if test="goodsPurchasingPrice != null">
				#{goodsPurchasingPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsOriginalPrice != null">
				#{goodsOriginalPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsPaymentPrice != null">
				#{goodsPaymentPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsCoverUrl != null">
				#{goodsCoverUrl,jdbcType=VARCHAR},
			</if>
			<if test="goodsSpecificationName != null">
				#{goodsSpecificationName,jdbcType=VARCHAR},
			</if>
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<!-- 根据主键更新所选内容 -->
	<update id="updateByPrimaryKeySelective" parameterType="com.jl.mis.model.OrderDetail">
		update order_detail
		<set>
			<if test="goodsDetailsId != null">
				goods_details_id = #{goodsDetailsId,jdbcType=INTEGER},
			</if>
			<if test="goodsQuantity != null">
				goods_quantity = #{goodsQuantity,jdbcType=INTEGER},
			</if>
			<if test="goodsSpecificationDetailsId != null">
				goods_specification_details_id =
				#{goodsSpecificationDetailsId,jdbcType=INTEGER},
			</if>
			<if test="goodsPurchasingPrice != null">
				goods_purchasing_price =
				#{goodsPurchasingPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsOriginalPrice != null">
				goods_original_price =
				#{goodsOriginalPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsPaymentPrice != null">
				goods_payment_price =
				#{goodsPaymentPrice,jdbcType=DOUBLE},
			</if>
			<if test="goodsName != null">
				goods_name = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsCoverUrl != null">
				goods_cover_url = #{goodsCoverUrl,jdbcType=VARCHAR},
			</if>
			<if test="goodsSpecificationName != null">
				goods_specification_name =
				#{goodsSpecificationName,jdbcType=VARCHAR},
			</if>
			<if test="orderId != null">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 根据主键更新全部内容 -->
	<update id="updateByPrimaryKey" parameterType="com.jl.mis.model.OrderDetail">
		update
		order_detail
		set goods_details_id = #{goodsDetailsId,jdbcType=INTEGER},
		goods_quantity = #{goodsQuantity,jdbcType=INTEGER},
		goods_specification_details_id =
		#{goodsSpecificationDetailsId,jdbcType=INTEGER},
		goods_purchasing_price =
		#{goodsPurchasingPrice,jdbcType=DOUBLE},
		goods_original_price =
		#{goodsOriginalPrice,jdbcType=DOUBLE},
		goods_payment_price =
		#{goodsPaymentPrice,jdbcType=DOUBLE},
		goods_name =
		#{goodsName,jdbcType=VARCHAR},
		goods_cover_url =
		#{goodsCoverUrl,jdbcType=VARCHAR},
		goods_specification_name =
		#{goodsSpecificationName,jdbcType=VARCHAR},
		order_id =
		#{orderId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	
	
	
	
	
	
	
	
	<!-- APP 接口 -->
	
	<!-- 根据订单号查询信息 -->
	<select id="selectByOrderId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		*
		from order_detail
		where order_id = #{orderId}
	</select>
	
	<!-- 批量保存信息 -->
	<insert id="insertBatch"  useGeneratedKeys="true" keyProperty="id">
	insert into order_detail(
		goods_details_id, goods_quantity,
		goods_specification_details_id,
		goods_purchasing_price,
		goods_original_price,
		goods_payment_price, goods_name, goods_cover_url,
		goods_specification_name, order_id)
	values
	 <foreach collection="list" item="item" index="index" separator="," >  
		 (
		#{item.goodsDetailsId,jdbcType=INTEGER},
		#{item.goodsQuantity,jdbcType=INTEGER},
		#{item.goodsSpecificationDetailsId,jdbcType=INTEGER},
		#{item.goodsPurchasingPrice,jdbcType=DOUBLE},
		#{item.goodsOriginalPrice,jdbcType=DOUBLE},
		#{item.goodsPaymentPrice,jdbcType=DOUBLE}, #{item.goodsName,jdbcType=VARCHAR},
		#{item.goodsCoverUrl,jdbcType=VARCHAR},
		#{item.goodsSpecificationName,jdbcType=VARCHAR},
		#{item.orderId,jdbcType=INTEGER})
		</foreach>
	</insert>
	
	<!-- 根据订单id删除订单详情表 -->
	<delete id="deleteByOrderId">
		delete from
		order_detail
		where order_id = #{orderId,jdbcType=INTEGER}
	</delete>
	
	
	
		<!-- 查询订单商品详情-传递供销存使用 -->
	<select id="selectOrderCommodity" parameterType="java.lang.Integer"
		resultType="com.jl.mis.model.SalesPlanOrderCommodity">
	SELECT
	od.goods_quantity AS number,
	od.goods_original_price AS unitPrice,
	od.goods_payment_price AS money,
  gsd.commodity_specification_id as commoditySpecificationId
FROM
	order_detail od
INNER JOIN goods_specification_details gsd ON gsd.id = od.goods_specification_details_id
WHERE
	order_id = #{orderId,jdbcType=INTEGER}
	</select>
	
	
	
	
	
</mapper>